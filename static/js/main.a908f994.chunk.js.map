{"version":3,"sources":["components/PostList.js","components/Post.js","components/CommentList.js","components/Comment.js","App.js","reportWebVitals.js","index.js"],"names":["PostList","props","post","id","title","body","cn","className","Post","useState","setPost","fetch","a","axios","get","res","data","result","useEffect","map","p","commentList","comment","name","email","Comment","comm","setComm","c","CommentList","App","setComment","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAaeA,EAXE,SAACC,GACd,MAAwBA,EAAMC,KAAvBC,EAAP,EAAOA,GAAGC,EAAV,EAAUA,MAAMC,EAAhB,EAAgBA,KACZC,EAAMH,EAAI,IAAK,EAAK,sBAAsB,qBAC9C,OACI,qBAAII,UAAWD,EAAf,UACI,6BAAKF,IACL,6BAAKC,MAFeF,ICejBK,EAjBF,WACT,MAAuBC,mBAAS,MAAhC,mBAAOP,EAAP,KAAYQ,EAAZ,KACMC,EAAK,uCAAG,8BAAAC,EAAA,sEACQC,IAAMC,IAAI,uDADlB,cACJC,EADI,gBAEWA,EAAIC,KAFf,OAEJC,EAFI,OAGVP,EAAQO,GAHE,2CAAH,qDAQX,OAHAC,qBAAU,WACNP,MACF,IAEC,8BACKT,GAAQA,EAAKiB,KAAI,SAAAC,GAAC,OAAE,cAAC,EAAD,CAAUlB,KAAMkB,UCFjCC,EAZK,SAACpB,GACjB,MAA6BA,EAAMqB,QAA5BnB,EAAP,EAAOA,GAAGoB,EAAV,EAAUA,KAAKC,EAAf,EAAeA,MAAMnB,EAArB,EAAqBA,KACjBC,EAAMH,EAAI,IAAK,EAAK,sBAAsB,qBAC9C,OACI,qBAAII,UAAWD,EAAf,UACI,6BAAKiB,IACL,6BAAKC,IACL,6BAAKnB,MAHeF,ICcjBsB,EAfC,WACZ,MAAuBhB,mBAAS,MAAhC,mBAAOiB,EAAP,KAAYC,EAAZ,KACMhB,EAAK,uCAAG,8BAAAC,EAAA,sEACQC,IAAMC,IAAI,0DADlB,cACJC,EADI,gBAEWA,EAAIC,KAFf,OAEJC,EAFI,OAGVU,EAAQV,GAHE,2CAAH,qDAMX,OADAC,qBAAU,WAAKP,MAAU,IAErB,8BACKe,GAAQA,EAAKP,KAAI,SAAAS,GAAC,OAAE,cAACC,EAAD,CAAaP,QAASM,UCExCE,MAdf,WACE,MAAuBrB,oBAAS,GAAhC,mBAAOP,EAAP,KAAYQ,EAAZ,KACA,EAA6BD,oBAAS,GAAtC,mBAAOa,EAAP,KAAeS,EAAf,KACA,OACE,sBAAKxB,UAAU,eAAf,UACE,gDACA,wBAAQA,UAAU,0BAA0ByB,QAAS,WAAKtB,GAAQ,GAAMqB,GAAW,IAAnF,mBACA,wBAAQxB,UAAU,yBAAyByB,QAAS,WAAKD,GAAW,GAAMrB,GAAQ,IAAlF,sBACCR,GAAQ,cAAC,EAAD,IACRoB,GAAW,cAAC,EAAD,QCAHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a908f994.chunk.js","sourcesContent":["\n\nconst PostList = (props) => {\n    const {id,title,body} = props.post;\n    let cn = (id %2 ===0) ? 'w3-ul w3-pale-green':'w3-ul w3-pale-blue';\n    return (\n        <ul className={cn} key={id}>\n            <li>{title}</li>\n            <li>{body}</li>\n        </ul>\n    );\n}\n\nexport default PostList;","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport PostList from \"./PostList\";\n\nconst Post = () => {\n    const [post,setPost] = useState(null);\n    const fetch = async()=>{\n        const res = await axios.get('https://jsonplaceholder.typicode.com/posts?userId=1');\n        const result = await res.data;\n        setPost(result);\n    }\n    useEffect(()=>{\n        fetch();\n    },[])\n    return (\n       <div>\n           {post && post.map(p=><PostList post={p}/>)}\n       </div>\n    );\n}\n\nexport default Post;","\n\nconst commentList = (props) => {\n    const {id,name,email,body} = props.comment;\n    let cn = (id %2 ===0) ? 'w3-ul w3-pale-green':'w3-ul w3-pale-blue';\n    return (\n        <ul className={cn} key={id}>\n            <li>{name}</li>\n            <li>{email}</li>\n            <li>{body}</li>\n        </ul>\n    );\n}\n\nexport default commentList;","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport CommentList from \"./CommentList\";\n\n\nconst Comment = () => {\n    const [comm,setComm] = useState(null);\n    const fetch = async()=>{\n        const res = await axios.get('https://jsonplaceholder.typicode.com/comments?postId=1');\n        const result = await res.data;\n        setComm(result);\n    }\n    useEffect(()=>{fetch();},[])\n    return (\n        <div>\n            {comm && comm.map(c=><CommentList comment={c}/>)}\n        </div>\n    );\n}\n\nexport default Comment;","import { useState } from \"react\";\nimport Post from \"./components/Post\";\nimport Comment from \"./components/Comment\";\nfunction App() {\n  const [post,setPost] = useState(false);\n  const [comment,setComment] = useState(false);\n  return (\n    <div className=\"w3-container\">\n      <h1>click you like</h1>\n      <button className=\"w3-btn w3-block w3-blue\" onClick={()=>{setPost(true);setComment(false)}}>posts</button>\n      <button className=\"w3-btn w3-block w3-red\" onClick={()=>{setComment(true);setPost(false)}}>comments</button>\n      {post && <Post />}\n      {comment && <Comment />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}